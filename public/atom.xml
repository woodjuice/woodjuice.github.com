<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Sugar Door]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="WoodJuice.github.com/"/>
  <updated>2015-08-24T17:29:36.000Z</updated>
  <id>WoodJuice.github.com/</id>
  
  <author>
    <name><![CDATA[WoodJuice]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hello world]]></title>
    <link href="WoodJuice.github.com/2015/08/25/2013-10-20-hello-world/"/>
    <id>WoodJuice.github.com/2015/08/25/2013-10-20-hello-world/</id>
    <published>2015-08-24T17:29:36.000Z</published>
    <updated>2015-08-24T17:29:36.000Z</updated>
    <content type="html"><![CDATA[<p>Hello, guys, I’m woodjuice’s keyboard</p>
]]></content>
    <summary type="html">
    <![CDATA[The first post from Woodjuice.]]>
    
    </summary>
    
      <category term="GitHub" scheme="WoodJuice.github.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[无限生命是否真的这么重要]]></title>
    <link href="WoodJuice.github.com/2015/08/25/%E7%94%9F%E5%91%BD%E6%98%AF%E5%90%A6%E6%97%A0%E9%99%90%E7%9C%9F%E7%9A%84%E6%9C%89%E9%82%A3%E4%B9%88%E9%87%8D%E8%A6%81%E5%90%97%EF%BC%9F/"/>
    <id>WoodJuice.github.com/2015/08/25/生命是否无限真的有那么重要吗？/</id>
    <published>2015-08-24T17:29:36.000Z</published>
    <updated>2015-08-24T17:29:36.000Z</updated>
    <content type="html"><![CDATA[<p>By 善文</p>
<p>最近老是被问一个问题：</p>
<blockquote>
<p>你相信生命是无限的吗？  </p>
</blockquote>
<p>还有一个类似的问题：  </p>
<blockquote>
<p>你相信人死后会转世/被审判吗？  </p>
</blockquote>
<a id="more"></a>
<p>对以上的问题，现有两种观点，</p>
<ol>
<li><p>一是生命就一次，人一死吹灯拔蜡，啥都没了。所以做人要抡圆了活，就为了一个痛快。</p>
</li>
<li><p>第二种观点，是认为人死了有另外的世界，或者投胎转世，或者接受审判。所以人活着要小心得活，害怕死后拉清单。第二种说法常见于宗教。</p>
</li>
</ol>
<p>于是有人就会说，人应该有信仰。这里的信仰指宗教信仰。</p>
<p>认为人该有宗教信仰的一方认为，出于畏惧心理，有信仰可以让人少释放点恶意多约束点自己，少把眼睛放别人身上多研究自己修行的问题。因为信仰会让人相信生命是无限次数的博弈，谁都没有笑到最后的那天。</p>
<p><em>我认为在这个观点中把宗教信仰和敬畏等同起来了。</em></p>
<p>而反对的那一方认为，这不是骗小孩嘛。人的生命本来就只有一次，是有限次的博弈，所以讲究的是在规定次数内谁赚的多享受的多。而为了让社会更好，所以逼着大家去信无法证明无法证伪的无限生命本身就是一种恶。</p>
<p><em>我以为无论如何表述，其实这两种观点其实本质上都有一个共同点：认为人没有外界约束的情况下，就会做恶就会互相伤害</em>。是谓“性恶论”。</p>
<p></p>

<p>然而，其实还有第三种观点。</p>
<p><strong>儒家认为:六合之外，存而不论。</strong></p>
<p>就是非人世间的事情不去讨论。</p>
<p>他们论的是：不管生命是有限的还是无限的，死了等死了以后再说，首先在活着的日子里该怎么处事怎么做人。</p>
<p>所以孔子说：<strong>不知生，焉知死</strong>。</p>
<p>在这个论点里，其实隐藏一个有一个很有意思的观点：<strong>无论外界如何，人都有自主选择成为什么样人的权利。</strong></p>
<p>人，毕竟并不是外界环境的奴隶，也不是巴普洛夫实验用的那条狗，更不是计算机，在相同的环境刺激下给出的答案永远不变。</p>
<p>就如同，一个人就算有无限生命，他也依然可能选择浑浑噩噩一遍一遍重复之前的日子，做到千年如一日；一个人就算没有无限生命，依然可能会去选择活的精彩，每日进步一点，扎扎实实活过几十年。</p>
<p><em>那么，对于这两个人而言，究竟谁的生命更长？</em>  </p>
<p></p>

<p>因此这里还包含有一个问题，</p>
<blockquote>
<p>生命究竟是什么？是个体存续的时间吗？还是说给周围人和事带来的影响？</p>
</blockquote>
<p></p>

<p>记得曾经有一个科幻小说叫《一日囚》，说有个人，干了坏事，被判囚禁在时光中的某一天。他的每一天都是一个轮回，不论他如何折腾，他身边的人和事都会在24小时之后回复原样，然而他也不能寻死，因为他是无限存活的生命，死不了。唯一能够随着时光留存下来的就是他的记忆。那么，对这样的一个人，如果生命是存续的时光，那他的生命究竟是无限的还是只有一天？</p>
<p>若说生命是给外界带来的影响，那他在不确定身边遇到的人是否是真实存在的情况下，在他不确定这24小时的接触中是否会影响到这些人，在他深切明白无论他能否影响到这些人和事，他都无法看的影响后的结果。</p>
<blockquote>
<p>请问，这样的囚徒的生命是否在延续，又该如何继续自己的生命？</p>
</blockquote>
<p></p>

<p>从结果来看，似乎这个囚徒的生命已经被摧毁了，也许唯一的生机，在他的选择，他可以选择不去在乎后面时光发生什么，后面时光是否真的存在而去对周遭的人和事做些什么。</p>
<p></p>

<p>佛教中有一句话：<strong>因地努力，果上随缘</strong>。大概就是为这种人说的吧。</p>
<p>………………………………</p>
<p>以上的言论是因为老是被人问是否相信死后如何如何这个问题搞烦了。</p>
<p>因此，直接给出答案：时间本身只是一种度量单位，并没有实际意义，而做什么样的个体，这个选择是由自己决定的，因此也当由自己负责。</p>
<p><strong>生死当如一，我辈共勉。</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[童鞋，请问，你相信生命是无限的吗？]]>
    
    </summary>
    
      <category term="Notes" scheme="WoodJuice.github.com/tags/Notes/"/>
    
      <category term="微信文字存档" scheme="WoodJuice.github.com/tags/%E5%BE%AE%E4%BF%A1%E6%96%87%E5%AD%97%E5%AD%98%E6%A1%A3/"/>
    
      <category term="思想" scheme="WoodJuice.github.com/tags/%E6%80%9D%E6%83%B3/"/>
    
      <category term="随笔" scheme="WoodJuice.github.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MacVim setup]]></title>
    <link href="WoodJuice.github.com/2015/08/25/2013-11-21-MacVim-setup/"/>
    <id>WoodJuice.github.com/2015/08/25/2013-11-21-MacVim-setup/</id>
    <published>2015-08-24T17:29:36.000Z</published>
    <updated>2015-08-24T17:29:36.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>考虑到某同学要在 Mac Os X 上学习 vim 的需求，于是汇总一篇 MacVim 的初步指南。<br>考虑到 github 和 gitcafe 的流行，在文中也涉及到某些 git 的应用</p>
</blockquote>
<p>Vim 的学习曲线比较陡峭，所以建议日常的时候使用 Vim 做一些不紧急的文书工作，比如我写这篇 blog，就是在 vim 下使用<a href="https://github.com/plasticboy/vim-markdown" target="_blank" rel="external">plasticboy/vim-markdownh</a>插件来完成，虽然不如 mou 之类Markdown实时渲染写作 app专业，但是胜在编辑长文章的时候跳转查找批量编辑方便，顺便也对vim 的快捷键有一个复习。同时，对于在 window/Linux 上使用过 vim 的同学也可以逐步感受出 MacVim 和 Vim 的一些区别。    </p>
<p>声明：</p>
<ol>
<li>部分参考资料来自网络，已在在文末列出 Reference List  </li>
<li>本文遵循 MIT 原则，转载请保留出处：woodjuice.github.io</li>
</ol>
<a id="more"></a>
<h2 id="MacVim_install_(MacVim安装指南)">MacVim install (MacVim安装指南)</h2><ol>
<li>Click and Download Macvim. //下载 macvim，国内不能下载的同学请戳<a href="http://download.csdn.net/download/myscom/8008723） (适合10.9+系统" target="_blank" rel="external">这里</a></li>
<li>Unzip the items and drag <em>MacVim.app</em> into Applicationsfolder. //解压缩文件，然后把MacVim拖到<em>应用程序</em>里</li>
<li>drag <em>mvim</em> into <em>/usr/bin</em>, then you can use <em>mvim</em> to start Macvim. //为了能在终端打开 MacVim，可以将mvim 这个脚本拖进<em>/usr/bin</em>.  </li>
<li>If you need some help, type<em>:h mvim</em>. //要是丫出了啥妖蛾子需要帮助，就猛拍键盘输入<em>:h mvim</em></li>
</ol>
<p><br><br></p>
<h2 id="配置文件存放点">配置文件存放点</h2><p><strong>gvimrc</strong>和<strong>vimrc</strong>  </p>
<p><strong>gvimrc</strong>是来存放外观设置的地方，<strong>vimrc</strong>是来存放对 vim 本身设置的地方，一般来说我们需要修改的是用户自己的 vimrc 和 gvimrc，而不是在全局文件上做修改，以防出什么幺蛾子。<br>gvimrc 存放在<em>~/.gvimrc</em><br>vimrc 存放在<em>~/.vimrc</em>  </p>
<blockquote>
<p>“.”表示这是一个隐藏文件，如果你发现没有这两个文件存在，请直接手动创建一个  </p>
</blockquote>
<p><br><br></p>
<h3 id="一些小问题">一些小问题</h3><p><strong>蛋疼的编码问题</strong>  </p>
<p>MacVim always set encoding to <em>UTF-8</em> //MacVim 直接把编码设置成 UTF8</p>
<pr></pr>


<p><strong>标签功能</strong><br>simply type <em>:tabe $VIM/gvimrc</em>  </p>
<p><strong>更像 Mac 系统自带编辑器的方式移动光标</strong></p>
<blockquote>
<p>Text editors on Mac OS X lets the user hold down shift+movement key to extend<br>the selection.  Also, pressing a printable key whilst selecting replaces the<br>current selection with that character.   </p>
</blockquote>
<p>Mac OS X 提供<em>shift+上下左右</em>来做文本选择，要替换的时候就敲入自己所需要的内容。要实现这个功能，只要<em>~/.vimrc</em>加入自己的设置</p>
<p>代码如下</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="function"><span class="title">has</span><span class="params">(<span class="string">"gui_macvim"</span>)</span></span>  </span><br><span class="line">	  let macvim_hig_shift_movement = <span class="number">1</span>  </span><br><span class="line">	endif</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="一些简单的命令和快捷键">一些简单的命令和快捷键</h2><p>1.<em>so </em> 这是 source 命令，在对 vimrc 文件编辑以后，经常使用<em>so ~/.vimrc</em>进行编译和排错</p>
<ol>
<li>打开命令，快捷键为 command+o, 或者输入<em>open .</em>,比如要打开<em>vimrc</em>文件的时候就输入<blockquote>
<p>open ~/.vimrc</p>
</blockquote>
</li>
</ol>
<h2 id="插件介绍">插件介绍</h2><pr></pr>

<p><strong>Vundle</strong></p>
<blockquote>
<p>Vundle 是一个将 vim 插件集中管理的插件，在使用 Vundle 之前必须要将各个插件包的各个部分分别解压到对应的文件夹，Vundle则会在<em>~/vim/bundle</em>文件夹里统一下载管理。</p>
</blockquote>
<h4 id="Vundle_Setup">Vundle Setup</h4><p><pr></pr></p>
<blockquote>
<p>git clone <a href="http://github.com/gmarik/vundle.git" target="_blank" rel="external">http://github.com/gmarik/vundle.git</a> ~/.vim/bundle/vundle*  </p>
</blockquote>
<p>在<em>vimrc</em>文件里写入<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">set nocompatible    " be iMproved</span><br><span class="line">filetype off        " required!</span><br><span class="line">set rtp+=~/.vim/bundle/vundle/</span><br><span class="line">call vundle#rc()</span><br><span class="line">" let Vundle manage Vundle</span><br><span class="line">" required!</span><br><span class="line">Bundle <span class="emphasis">*gmarik/vundle*</span></span><br><span class="line">" vim-scripts repos</span><br><span class="line">Bundle <span class="emphasis">*vim-plugin-foo*</span></span><br><span class="line">Bundle <span class="emphasis">*vim-plugin-bar*</span></span><br><span class="line">filetype plugin indent on    " required!</span><br><span class="line"><span class="code">```</span>  </span><br><span class="line"></span><br><span class="line">安装就完成了  </span><br><span class="line"></span><br><span class="line"><span class="header">#### Vundle Usage </span></span><br><span class="line"></span><br><span class="line">安装插件: <span class="emphasis">*:BundleInstall*</span>,即可以直接在<span class="emphasis">*BundleInstall*</span>后面跟上 github 上的项目名 </span><br><span class="line">更新插件: <span class="emphasis">*BundleUpdate*</span>  </span><br><span class="line">"卸载不在列表中的插件: <span class="emphasis">*:BundleClean*</span>  </span><br><span class="line"></span><br><span class="line">也可以直接在<span class="emphasis">*Vimrc*</span>里写入要安装的插件名，比如：  </span><br><span class="line"><span class="emphasis">*Bundle ctrlp.vim*</span>  //这个是在 vim-script 上的项目</span><br><span class="line"><span class="emphasis">*Bundle Valloric/YouCompleteMe*</span>*  //这个就是一个 github 上的repo</span><br><span class="line"></span><br><span class="line"><span class="horizontal_rule">----------------</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">pr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="title">pr</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="header">### Some plugins from Vundle</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">pr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="title">pr</span>&gt;</span></span></span><br><span class="line"><span class="strong">**plasticboy/vim-markdown**</span>	</span><br><span class="line"></span><br><span class="line">Markdown语法插件github地址请猛击：[<span class="link_label">plasticboy/vim-markdownh</span>](<span class="link_url">https://github.com/plasticboy/vim-markdown/</span>)</span><br><span class="line"></span><br><span class="line">用 Vundle 安装时，先在<span class="emphasis">*~/.vimrc*</span>加入   </span><br><span class="line"></span><br><span class="line"><span class="code">```</span>  </span><br><span class="line"></span><br><span class="line">Plugin <span class="emphasis">*godlygeek/tabular*</span></span><br><span class="line">Plugin <span class="emphasis">*plasticboy/vim-markdown*</span></span><br></pre></td></tr></table></figure></p>
<p><pr></pr><br>之后运行</p>
<pre><code><span class="pseudo">:so</span> ~/<span class="class">.vimrc</span>
<span class="pseudo">:PluginInstall</span>
</code></pre><p>第一条语句是用来source vimrc 文件的，第二条进行安装</p>
<p><strong>ZenCoding.vim</strong>  </p>
<p><a href="http://pepelsbey.net/2008/08/zen-html/" target="_blank" rel="external">ZenCoding</a><br>这个插件估计都成为Html/Css 同学的标配插件。  </p>
<p>不多说，上演示<a href="http://v.youku.com/v_show/id_XMTM4NDQwNzgw.html" target="_blank" rel="external">视频</a>，尼玛太尼玛的快了  </p>
<p>ZenCoding墙内介绍请戳<a href="http://blog.chinaunix.net/uid-22414998-id-3183557.html" target="_blank" rel="external">这里</a></p>
<h3 id="Reference">Reference</h3><p><a href="http://249wangmang.blog.163.com/blog/static/526307652012103010202962/" target="_blank" rel="external">vim插件管理Vundle</a></p>
<p><a href="http://beiyuu.com/git-vim-tutorial/" target="_blank" rel="external">Git时代的VIM不完全使用教程</a></p>
<p><a href="http://blog.chinaunix.net/uid-22414998-id-3183557.html" target="_blank" rel="external">国内对 ZenCoding比较详尽的一个</a></p>
]]></content>
    <summary type="html">
    <![CDATA[First guide for MacVim]]>
    
    </summary>
    
      <category term="Mac" scheme="WoodJuice.github.com/tags/Mac/"/>
    
      <category term="MacVim" scheme="WoodJuice.github.com/tags/MacVim/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo Notes]]></title>
    <link href="WoodJuice.github.com/2015/08/14/Hexo-Notes/"/>
    <id>WoodJuice.github.com/2015/08/14/Hexo-Notes/</id>
    <published>2015-08-14T14:11:04.000Z</published>
    <updated>2015-08-24T17:43:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="How_to_set_muti-tags?">How to set muti-tags?</h3><p>Try on this way when you need to set tags more than one.</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tags</span>: <span class="string">[Hexo, Technical note, Blog]</span></span><br></pre></td></tr></table></figure>
<p>Then</p>
<p><img src="/img/tags.png" alt="muti-tags"></p>
<p><br><br></p>
<h3 id="If_I_change_to_another_computer,_how_to_continue_to_use_Hexo?">If I change to another computer, how to continue to use Hexo?</h3><p>There are two computer: one named <em>old-pc</em>, another named <em>new-pc</em>.</p>
<ol>
<li><p>Install <a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">hexo-git-backup plugin</a> follow the instruction in <em>old-pc</em>. And backup your hexo files to github branch, such as <em>hexo-source-code</em>.</p>
</li>
<li><p>Change to <em>new-pc</em>, <code>git clone</code> your responsity, and switch to <em>hexo-source-code</em>.</p>
</li>
<li><p>Use <code>npm install hexo</code> to install hexo, and then <code>hexo g</code>, <code>hexo s</code>.</p>
</li>
</ol>
<p>That’s all!</p>
<p><br><br></p>
<h3 id="node-gyp_rebuild?">node-gyp rebuild?</h3><p>When I try to install hexo on OS X 10.10.5, node-gyp rebuild cannot be installed correctly.</p>
<p>The solution is:  </p>
<blockquote>
<p>npm install hexo –no-optional  </p>
</blockquote>
<p>Ref: <a href="https://github.com/hexojs/hexo/issues/1262" target="_blank" rel="external">https://github.com/hexojs/hexo/issues/1262</a>  </p>
<p><br><br></p>
]]></content>
    <summary type="html">
    <![CDATA[The tips of hexo.]]>
    
    </summary>
    
      <category term="Blog" scheme="WoodJuice.github.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="WoodJuice.github.com/tags/Hexo/"/>
    
      <category term="Technical note" scheme="WoodJuice.github.com/tags/Technical-note/"/>
    
      <category term="Tech-Notes" scheme="WoodJuice.github.com/categories/Tech-Notes/"/>
    
  </entry>
  
</feed>
